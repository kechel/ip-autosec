.pl 10.0i
.po 0
.ll 7.2i
.lt 7.2i
.nr LL 7.2i
.nr LT 7.2i
.ds LF Jan O. Kechel 
.ds RF FORMFEED[Page %]
.ds LH INTERNET DRAFT
.ds RH August 3, 2013
.ds CH IP AutoSEC
.ds CF Expires February 4, 2014
.hy 0
.nh
.ad l
.in 0


.nf
.tl 'INTERNET-DRAFT''Jan Kechel'
.tl 'Intended Status: Proposed Standard'''
.tl 'Expires: February 4, 2014''August 3, 2013'
.fi

.ce 2
IP AutoSEC 
Jan O. Kechel
.fi
.in 3


.ti 0
Abstract

This document describes the IP AutoSEC protocol, which is designed to
quickly establish IP based VPN (IPv4) or IPSEC (IPv6) connections to any
endpoint supporting IP AutoSEC.

.ti 0
Status of this Memo

This Internet-Draft is submitted to IETF in full conformance with the provisions of BCP\078 and BCP\079.

Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups.  Note that other groups may also distribute working documents as \%Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time.  It is inappropriate to use Internet-Drafts as reference material or to cite them other than as "work in progress."

The list of current Internet-Drafts can be accessed at \%http://www.ietf.org/1id-abstracts.html

The list of Internet-Draft Shadow Directories can be accessed at http://www.ietf.org/shadow.html


.ti 0
Copyright and License Notice\" Boilerplate from December 2009

Copyright (c) 2013 IETF Trust and the persons identified as the document authors. All rights reserved.

This document is subject to BCP\078 and the IETF Trust's Legal Provisions Relating to IETF Documents \%(http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section\04.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.



.\" \# TD4  -- Set TOC depth by altering this value (TD5 = depth 5)
.\" \# TOC  -- Beginning of auto updated Table of Contents
.in 0
Table of Contents

.nf
   1  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1  Typical steps . . . . . . . . . . . . . . . . . . . . . . .  3
   2 IP AutoSEC DNS Resource Record: KEY  . . . . . . . . . . . . . .  4
     2.1 RR KEY Format  . . . . . . . . . . . . . . . . . . . . . . .  4
     2.2 RR KEY Example . . . . . . . . . . . . . . . . . . . . . . .  5
   3 IP AutoSEC protocol  . . . . . . . . . . . . . . . . . . . . . .  5
   4 IP AutoSEC integration with VPN (IPv4) . . . . . . . . . . . . .  5
   5 IP AutoSEC integration with IPSEC (IPv6) . . . . . . . . . . . .  5
   6 IP AutoSEC error codes . . . . . . . . . . . . . . . . . . . . .  6
   7 IP AutoSEC examples  . . . . . . . . . . . . . . . . . . . . . .  6
   8  Security Considerations . . . . . . . . . . . . . . . . . . . .  7
   9  References  . . . . . . . . . . . . . . . . . . . . . . . . . .  7
     9.1  Normative References  . . . . . . . . . . . . . . . . . . .  7
     9.2  Informative References  . . . . . . . . . . . . . . . . . .  7
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . .  7
.fi
.in 3

.\" \# ETC -- End of auto updated Table of Contents

.bp
.ti 0
1  Introduction

IP AutoSEC asymmetrically encrypts the first send datagram to any endpoint and
starts a symmetric encrypted connection by including a symmetric key and encryption parameters
as well as already symmetrically encrypted payload - all within the first packet.

All subsequent IP datagrams will be encrypted with the provided
symmetric key like in usual VPN or IPSEC connections.

IP AutoSEC uses DNS-Keys to distribute the required public-keys and encryption
parameters for endpoints and specifies a simple protocol sitting between the IP and any
upper Layer in the internet protocol suite and is used only for the very first datagram
of any successful connection while beeing replaced upon subsequent submissions with DNSSEC (IPv6) or VPN (IPv4).

Unsuccessful connections may answer using the IP AutoSEC protocol to return error values or propose different encryption parameters or keys.

.ti 0
1.1  Typical steps

.in 6
1. Server X has public-key and accepted algorithms "AES-128;AES-192;AES-256" available through DNS

2. Client A wants to view Website hosten on Server X and creates a HTTP GET request packed in TCP and IP

3. Upon sending the very first IP datagram on the client IP AutoSEC intercepts, and:

.in 9
3.1 asks DNS for AutoSEC values of Server X

3.2 decides which one of the accepted encryption algorithms to use

3.3 generates an appropriate random symmetric key

3.4 encrypts the TCP packet using the generated key

3.5 creates the IP AutoSec Header, including:

.in 12
 3.5.1 the generated symmetric key

 3.5.2 the used encryption parameters

 3.5.3 the original upper layer protocol identifier

.in 9
3.6 asymmetrically encrypts the IP AutoSEC Header using the provided public-key of server X

3.7 assembling the final IP datagram:

.in 12
3.7.1 using the original IP-Header (from step 3)

3.7.2 replacing the upper protocol-identifier with IP AutoSEC's own identifyer

3.7.3 inserting the asymmeterically encrypted IP AutoSec header

3.7.4 and appending the symmetrically encrypted payload

.in 6
4. Upon reciving this datagram the server recognizes the IP AutoSEC protocol identifier

.in 9
4.1 decrypts the IP AutoSEC Header using its private key

4.2 creates IPSEC or VPN established connection

4.3 replaces the IP AutoSEC header with a standard conform IPSEC Header or appropriate VPN payload

4.4 hands over to IPSEC / VPN

.in 3

.ti 0
2 IP AutoSEC DNS Resource Record: KEY

IP AutoSEC uses the DNS Resource Record (RR) 'KEY' for public-keys. The RR 'KEY' was defined with DNSSEC (RFC2535) but is obsolete since 2004 and hereby reused.

.ti 0
2.1 RR KEY Format

The RR KEY not only transports the public-key, but all needed configuration-data for IP AutoSEC:

Multiple values should be ordered by preference, most preferable first. Multiple values must be separated with , (comma). Encryption, Hash, DH and Public-Key Sections must be separated with ; (semicolon). Whitespace and newlines must be ignored. The Public-Key must be Base64 encoded.

.in 3 
1. allowed encryption-algorithms, ordered by preference

2. allowed hash-algorithms, ordered by preference

3. Diffie-Hellman Group, ordered by preference

4. public-key

2.1.1 valid values for algorithms
The valid values are the string representations as defined by IKEv2 (RFC4306) in section 3.3.2. Transform Structure:

Encryption algorithms correspond to section 'Transform Type 1' appended by the keylength -128, -192, or -256 and includes the values: ENCR_DES_IV64, ENCR_DES, ENCR_3DES, ENCR_RC5, ENCR_IDEA, ENCR_CAST, ENCR_BLOWFISH, ENCR_3IDEA, ENCR_DES_IV32, ENCR_NULL, ENCR_AES_CBC, ENCR_AES_CTR

Hash algorithms correspond to section 'Transform Type 3' as well as RFC 4868 and includes the values: NONE, AUTH_HMAC_MD5_96, AUTH_HMAC_SHA1_96, AUTH_DES_MAC, AUTH_KPDK_MD5, AUTH_AES_XCBC_96 as well as AUTH_HMAC_SHA2_256_128, AUTH_HMAC_SHA2_384_192 and AUTH_HMAC_SHA2_512_256

Diffie-Hellman Groups correspond to section 'Transform Type 4', which itself references RFC 3526 and includes the values: MODP1536, MODP2048, MODP3072, MODP4096, MODP6144 and MODP8192

IP AutoSEC does not insist on this specific list of algorithms but may be used with any other or future algorithms that are defined in this manner, e.g. by updates to the IKE standard. If either the client or the server does not support a specific algorithm IP AutoSEC simply does not work.

.ti 0
2.2 RR KEY Example

KEY "ENCR_AES_CBC-256,ENCR_3DES-128;AUTH_HMAC_SHA2_512_256;MODP3072,MODP2048;
r18wYNi9EGrX5pZuqVau4Vnc2U9nq9Jq3XPw0oHzFH
GIyrF3+kdOT6nTQyMiE4p3eOI2WN8dz1BO
ytMmtP+5DEDC39z5kRnMwmRbI5cGoCp7cFwy
Hf/+pu0RoIqVcmKcB4V9HByu6jFxwgwGdqtqzkMf...

* public-key shortened for display, normally encodes 1024, 2048 or 4096 bits

.ti 0
3 IP AutoSEC protocol

.ti 0
4 IP AutoSEC integration with VPN (IPv4)

.ti 0
5 IP AutoSEC integration with IPSEC (IPv6)

.ti 0
6 IP AutoSEC error codes

.ti 0
7 IP AutoSEC examples

.bp
.ti 0
8  Security Considerations

<Security considerations text>


.ti 0
9  References

.ti 0 
9.1  Normative References

.in 14
.\" \# REF  -- Managed reference list. Syntax: [RFC]nnnn[;Label], ... ,[RFC]nnnn[;Label]
.\" \# 0791;IPv4, 2460;IPv6, 4033;DNSSEC, 4306;IKEv2, 3548;Base64
.ti 3
[IPv4]     Postel, J., "Internet Protocol", STD 5, RFC\0791, September 1981.

.ti 3
[IPv6]     Deering, S. and R. Hinden, "Internet Protocol, Version 6 (IPv6) Specification", RFC\02460, December 1998.

.ti 3
[DNSSEC]   Arends, R., Austein, R., Larson, M., Massey, D., and S. Rose, "DNS Security Introduction and Requirements", RFC\04033, March 2005.

.ti 3
[IKEv2]    Kaufman, C., Ed., "Internet Key Exchange (IKEv2) Protocol", RFC\04306, December 2005.

.ti 3
[Base64]   Josefsson, S., Ed., "The Base16, Base32, and Base64 Data Encodings", RFC\03548, July 2003.

.\" \# ERF -- End of managed reference list


.ti 0
9.2  Informative References

.in 14
.\" \# REF  -- Managed reference list. Syntax: [RFC]nnnn[;Label], ... ,[RFC]nnnn[;Label]
.\" \# 
.\" \# ERF -- End of managed reference list
.in 3


.ti 0
Authors' Addresses

.sp
.nf
Jan O. Kechel
Calle Quilla 8/16
E-35558 Caleta de Famara
Canary Islands

EMail: jan@kechel.de
.sp
.fi

